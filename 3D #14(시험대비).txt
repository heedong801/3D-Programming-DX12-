4/24
스왑체인을 만드는 이유는 ? 렌더링하고 프레젠트를 해서 내가 원하는 게임세상이 디스플레이 장치에 이상한 일 없이 제대로 그려지기 하기 위해서
디바이스 드라이버를 접하지 않고 하드웨어를 접근할 수 없음

프레임은 홀수번째, 짝수번째로 찢을 수 있는데, 각각을 필드라고 하며 다시 붙이면 프레임이 됨
짝수 번째는 어퍼, 홀수는 lower 이다.

오늘날의 대부분의 모니터나 그래픽카드는 프로그레시브 방식

색깔 포맷은 DXGI_FORMAT 클래스 사용(소속 멤버 변수 중 UNKNOWN 은 0)
R32----_FLOAT 픽셀 하나는 32 * 4 비트로 표현되고 32비트 실수로 표현

쉐이더 : GPU에서 그림을 그리기 위해 렌더링을 해주는 프로그램, 쉐이딩을 해주는 프로그램
쉐이딩 : 빛의 방향에 따라 색의 옅고 짙음, 그림자 등을 표현

GPU아 후면버퍼의 색깔형태를 맞춰주는 게 좋음 (uNORM 둘다 ) 이게 제일 좋은 방법

원근 투영 나눗셈 후 z 값 0 <= < 1이 Depth 값이 됨
Depth : 카메라 좌표계의 z값 -> 노멀라이즈 -> 0<= <=1 사이 

화가 그리기 알고리즘 : 먼 것부터

Depth 버퍼 알고리즘을 렌더링 각 z버퍼당 해당되는 픽셀의 뎊스 값을 비교하여 그림 생성
==================================================================================시험대비
Device 42와 Command List 74, 37

Device라는 인터페이스 클래스는 뭔가 만들려고 하는거 Create 할때 쓰면 됨
만들어진 놈을 Device에 Set 하려면 Command List 인터페이스를 쓰면 됨

CheckFeatureSupprot 이 디바이스를 만든 어댑터(그래픽카드)가 하드웨어적으로 어떤 기능을 갖고 있는지를 확인하는 함수. 디바이스 만들고 제일 먼저 확인해야 하는 것

첫번째로 디바이스를 만들고, 두 번째로 스왑체인함수 호출
스왑체인은 커맨드 큐가 있어야 하고 커맨드 큐가 있으려면 디바이스가 있어야함

BufferCount : 후면버퍼의 개수
OutputWindow : 스왑체인에 출력이 그려질 윈도우에 핸들
Windowed : 풀스크린 or 윈도우
BufferDesc : 스왑체인의 디스플레이 모드
	ReefreshRate : hz(단위)로 화면갱신 비율 1초단위로 60hz는 1초에 60번 (전면버퍼가 언제 바뀔꺼냐)
	1초에 몇번이라는 표현들을 DXGI RATIONAL(유리수)로 표현함
	ScanlineOrdering : 640 480 480은 스캔라인 수 짝수 어퍼필드, 홀수 로여필드, 오늘날은 모든 스캔라인들을 순서대로 다 보냄(Progressive)방식
	Scaling : 그려질 때 가운데서 그려지게 해주는 것(잘 모르면 centered) 화면에 맞추기 위해서 늘려서 그려줄 수도 있음
	 
	
풀스크린 모드 스왑체인으로 동작하는 게임 : 전체화면 게임

DXGI_FORMAT : 색깔 표현
TYPELESS 알아서 바꿔서 써
UNORM : 색깔이 0 ~ 1 사이로 표현 노멀라이즈가 됨
SNORM : -1 ~ 1 사이 색 표현 가운데가 0

후면버퍼의 색과 쉐이더 색 형식을 맞춰주는 게 좋음
왜냐하면 서로 다를 경우 쉐이더가 색을 다시 포맷을 맞춰주고 그려야 하기 때문
한 픽셀의 포맷은 RGB888 UNORM 쓰는게 좋음 

원근투영변환 곱하는 이유?
-종횡비를 맞추기 위해서
-카메라 fov 90도가 아닐수도 있어서 그걸 위해서 카메라 좌표계에 있는 점들을 왜곡 을 시키자 주로 스케일링

유일하게 원근투영변환행렬만 4번째 열이 0 0 1 0 쓴다

그릴 때 정렬로 그리는 순서를 정할 경우 오브젝트 3개만 해도 해당 픽셀만큼 그리는 데 비용도 크고
서로 관통하고 이쓴 오브젝트의 경우 프레임마다 그리는 경우가 뒤바뀔수가 있어서 ㄴㄴ

CPU를 더 사용하지말고 메모리를 더 쓰는 거로 프레임버퍼와 똑같은 크기의 뎁스 버퍼 만듬