4/26
픽셀이 크면 계단현상 발생(앨리어싱)
슈퍼샘플링 : 그리려는 화면보다 4배 (가로 2, 세로 2) 큰 화면버퍼 만든 후 여기다 렌더링, 뎊스도 같이 늘어야함
단점 : 4배 많은 픽셀들에 대해 연산량도 많아짐

다중샘플링 : 4배까진 똑같, 한 픽셀에 대해 색상 계산을 한번만 함, 색깔 결정 시간이 슈퍼샘플링 보다 1/4
가시성 테스트 : Depth Test로 결정됨, 모든 서브픽셀에 대해 Depth Test 실행
DXGI_SAMPLE_DESC 클래스에 UINT Quality 다중 샘플링 횟수

Swapchain에서는 백버퍼를 Render Target(Direct3상에서) 으로 표현 

SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH 윈도우의 해상도를 필요한대로 바꿀수 있는 함수

WindowAssociation의미는 스왑체인과 HWND를 이어서 Alt+Enter 같은 키를 작동할 수 있게 해줌

IDXISwapChain::Present SyncInterval 수직회귀란? 모니터가 처음 스캔라인부터 마지막 스캔라인까지 그린후 다시 처음으로 올라가는 행위
	이 값이 1 이면 수직회귀를 1번 기다리고 다 되면 그림( 논리적으로 1이 좋음 )
		2 이면 2번 기다리고 다 되면 그림
		0 이면 무조건 그림 (하드웨어적으로 그림이 전 그림과 현 그림이 섞일수 있음 그러나 프레임은 잘 나옴)

	Flags는 UINT와 열거형이니 여러개 사용 가능
	대부분 0를 사용 ( 의미적을 좋음 )

다른 프로그램이 내 윈도우를 그려서 내 모니터에 현 프레젠테이션을 못보여준다고 OCCLUDED 반환

DXGI_SWAP_CHAIN_DESC1 클래스에 Stereo는 3d 느낌나는 그림(왼쪽,오른쪽 그림 그리게 해주는 것)

SetFullscreenState함수에 Bool Fullscreen 트루이면 전체화면

ResizeTarget 바탕화면 해상도도 바꿔놓고 전체화면으로 동작하게 바꿔줌 진정한 의미에 전체화면
이 함수를 쓰기 위해서 Swapchain은 만들때 DXGI_SWAP_CHAIN_DESC에 UINT Flags를 DXGI_SWAP_CHAIN_FLAG_ALLOW_MODE_SWITCH로 해놔야 사용 가능

CPU를 사용해서 command를 만들고 이걸 List에 넣고 Queue에 넣으면 GPU가 하나씩 뽑아다가 수행(기본적으로 Set & Draw 명령)
그 다음 프레임에도 역시 CPU가 명령들을 만들어서 집어넣고 GPU는 실행하고.
Command Queue에 함수 ExecuteCommandLists() : 명령어들을 실행해라

CommandQueue를 만들어야 리스트를 담고 리스트에 커맨드를 만들어야 넣고 커맨드를 만들려면 메모리 할당해야 한다.
CreateCommandAllocator 큐 하고 리스트 타입이 다 같아야함

Open상태는 명령어들을 추가할 수 있는 상태, 다 넣었으면 닫은 다음 큐에 넣으면 됨