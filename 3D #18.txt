5/8(Pipeline01)
Direct3D 쉐이더 단계

정점-쉐이더 단계
대부분 Transformation계산 수행 T&L 중에 T단계 모델 -> 월드
하나의 정점에 대하여 한 번 호출, 하나의 출력 정점을 생성
그래픽스 파이프라인에서 반드시 실행이 되어야 하는 단계
입력으로 16개까지의 벡터 입력 가능 -> 64개의 실수 입력 가능 -> 4개의 행렬
출력으로 16개까지의 벡터 출력 가능
입력과  출력으로 저 리미트만 지켜주면 어떻게든 사용가능( 예를 들어 어떤 함수의 매개변수 실수 하나 입력받아서 단위 행렬 리턴가능)

입력 조립 단계에서 SV_primitiveID도 같이 흘려 보내줌 총 3개

픽셀에 대하여 픽쉐-쉐이더를 한번씩 호출

오브젝트를 그릴려면?
-모델
-행렬

픽셀 쉐이더 - 픽셀에 대해 연산을 해서 픽셀의 색깔을 결정해주는 단계 T&L 중에 L단계(텍스퍼매핑 or 조명계산도 포함)
	    - 기하쉐이더의 유무에 따라서 입력으로 32개의 벡터를 사용할 수 있고, 출력으로 출력병합단계에 색깔(8개의 벡터) 리턴
	    - 렌더타겟마다 하나의 색 이어줘야함, 각각의 색상은 각각의 렌더타겟으로 들어감

버텍스 라이팅의 의미 - 정점들의 조명계산을 한 후 래스터화 과정에선 픽셀의 대한 정보로 보간함, 프레임이 차이가 많이 안날거임
픽셀 라이팅으로 조명 계산을 하면? - 모든 픽셀에 대해 조명 계산, 멀면 조금 가까우면 많이 호출해서 프레임 차이 심함

시멘틱
각 단계의 출력들이 다음 단계의 입력이 될 때 시멘틱으로 구분해준다.
SV로 \시작되는 시멘틱들은 정해진 용도대로만 쓰여져함

버텍스쉐이더(입력조집 작업)

트랜스폼이 되었다->투영자표계로 표현됐다
sv_Target = 렌더타겟

sv타겟은 픽셀세이더에서 필수 생성해야함

정점 쉐이더 단계 준비 -> Set

바이트코드란?

D3DCompileFrimFile함수
2번째 인자는 디파인으로 대체가능
3번째 인자 저거 넣어야 인클루드 가능

Flag1을 Debug or Optimi 같이 하는 게 일반적 디버그하랴먄 ㅇㅇ
