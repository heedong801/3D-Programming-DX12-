4/3
픽킹
픽킹광선과 교차점을 갖는 모든 폴리곤을 찾는 행위( 그 중 가장 가까운 것을 찾는 것이 피킹알고리즘 )
화면에 있는 점으로부터 역변환을 통해 카메라좌표계의 점들을 구할 수 있음( 화면상의 피킹좌표가 주어지면 )
투영변환행렬을 사용하면 fov가 90도라고 생각하면 됨
평면을 노멀라이즈한다?
D3DXPlaneNormalize
ex) 2x+ 3y + 3z + 5 = 0
노멀 안돼있다 왜? 법선 벡터 2 3 3 이 크기가 1이 아니니까
크기로 나누면 2/a x + 3/a y + 3/a z + 5/a = 0 두 식은 일치 아래식은 노멀라이즈된 평면

평면을 노멀라이즈 한다는 건 무슨 뜻이니? 왜 하니?
1) 정규화된 평면의 방정식에서 d는 원점에서 평면까지의 거리를 의마하게 된다.
2) (a b c)임의의 점을 노멀라이즈된 평면의 방정식의 대입을 해보면 이 점하고 평면상의 수직거리를 알 수 있다.
PlaneNormalize함수로 평면을 노멀라이즈 시키고 PlaneDot 함수를 사용하면 점과 평면상의 수직거리도 알 수 있다.

(a b c d ) 내적 ( x y z 1 ) = ax + by + cz + d 즉, (노멀라이즈된 평면(abcd)라면 벡터와의 수직거리가 됨)
대입한 값이 > 0 이면 평면보다 앞일수도 알수 있음

Quiz
어떤 문제가 있을까?
만약 게임월드에서 총알과 충돌처리를 하려한다면 충돌처리를 하기 위해 모든 객체를 월드변환을 하기보다는 총알하나만 역변환하는게 쉽다.

DirectX를 사용하는 이유?
-SIMD(단일 명령 다중 데이터 처리)
=실수 4개를 동시에 사칙연산할 수 있다(시간절약).

sdafx.h에다가 include 다이렉트 다 넣기 4개
using 2개도 다 써주기

SISM와 대응되는XMVERTOR/XMMATRIX 타입은 지역변수,매개변수,전역변수로만 써야한다.
구조체, 동적메모리등은 안쓰는게 나음 -> XM() 새로운 구조체 변수 이용

======================================================================================시험대비
25분부터 강의자료 2장
fov가 90도 일때 는 투영평면과 카메라의 거리가 1
피킹
화면상의 좌표를 
평면이 노멀라이즈 됐는지 확인?
-그 평면의 법선벡터의 크기가 1이 아니기 때문에

방향벡터는 TransformNormal 함수에서 벡터의 w값을 0으로 하고 계산
위치벡터는 					 1로 하고 계산 -> 그래야 41, 42, 43에 제대로 된 값이 들어감
???? 법선벡터를 변활할 때는 행렬이 역행렬의 전치행렬로 바뀌어야 하는 이유?

=======================================================================================
그래픽 처리 중 가장 많은 연산에 해당하는 벡터의 연산을 해주는 CPU가 있다.
SIMD 프로세스를 이용하면 기존 벡터 연산보다 연산속도가 빨라짐
현 컴퓨터들은 SIMD의 기능을 다 가지고 있다.
아주 강력한 충돌검사 함수들이 제공됨( 다양한 기능의 함수들이 제공됨 )

DIRECTX MATH를 써야하는 이유 2가지
-CPU는 SIMD 프로세서니까 SIMD의 기능 수학 라이브러리를 써야함
-다양한 충돌검사 함수들을 쉽게 사용가능

SIMD프로세서는 성능을 최대화 하기 위해서 내부적으로 모든 CPU에는 캐쉬메모리, 레지스터(모든 연산을 하는데 피연산자 저장하는 곳) 영역이 있음
레지스터에 벡터가 쉽게 올라가도록 XMVECTOR 타입은 SIMD CPU가 가지고 있는 하드웨어 레지스터하고 1:1로 대응되게 만들어져서 굉장히 빨리 돌아가는 구조를 가지고 있음
SIMD 레지스터는 16바이트 정렬을 가지고 있음 모든 XMVECTOR 변수들은 메모리 주소가 무조건 16바이트의 배수가 되어야함

XMMATRIX는 XMVECTOR 4개가 모인것으로 역시 16바이트 정렬이 필요
-> 시작주소를 16의 배수로 만들기 위한 귀찮은 작업이 필요한데, 컴파일러가 알아서 해줌( 지역변수, 매개변수, 전역변수 )
그러나 동적 메모리할당, 클래스, 구조체는 문제가 생길 수 있음
그래서 XMVECTOR, XMMATRIX는 동적할당이나 구조체의 멤버변수로는 선언해서는 안됨 !!!!

XMVECTOR 128비트의 덩어리, 그냥 데이터 타입

XMFLOAT3, XMFLOAT4 구조체의 쓰임새 :  벡터를 사칙연산 할때만 XMVECTOR로 바꿔서 계산을 하고, 저장도 다른 타입이라 굳이 16바이트 배수를 생각할 필요도 없이 쓸수있다.
계산도 빨리 일어나고, 필요한 정보도 까다로운 조건없이 유지 가능