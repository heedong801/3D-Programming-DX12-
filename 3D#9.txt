4/5
XMFLOAT3A (A는 얼라인드 버전으로, 웬만하면 이거사용)
XMFLOAT 4*3 쓰는 이유?
괄포연산자 오버로딩 -> 캐스팅(형 변환 연산자)

XMVECTOR는 x,y,z라는 변수가 없 -> 초기화는 어떻게? -> A = XMVERTORZERO() 이렇게
함수들이 다 요소별 연산
Coord 는 위치벡터로 w 0 Normal은 방향벡터로 w 1

DirectXmath에서는 평면도 벡터로 float4 짜리 써야함

Axis(월드좌표계의 축 의미) 바운딩박스와 축과 월드좌표계의 좌표는 항상 평행, 어떻게 물체가 움직이냐에 따라 바운딩박스크기 바뀜
Aligned
B운딩
B스
단점: 회전할 때마다 바운딩박스 새로 구해야함, 충돌이 정확하지 않을 수도 있음
장점: 간단하고 빠르다
2개의 벡터만 주어지면 모든 점을 알수있다(ex 최대,최소) extens는 중심과 더해져서 최대점(x,y,z가 제일큰점)등 구할수있음

OBB: 바운딩 박스의 축은 오브젝트좌표계의 축들과 평행으로, 모델이 회전하면 바운딩박스도 회전한다.
단점 : 시간이 오래걸림(알고리즘 복잡)
장점 : 정확, 회전할 때마다 바운딩 박스 구할필요 없음
회전된 2박스 충돌체크법?
점 2개를 축에 대해 투영 그러면 선분을 구할 수 있는데 각 면에 대한 선분들이 서로 겹치는 부분이 있는지 확인 x축,y축,z축으로 전부 겹쳐야
물체들이 충돌한거

박스 알고리즘의 다른 점
쿼터니언이 없으면 aabb, 있으면 obb