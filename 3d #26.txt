6/7 Lights
직접 조명

디퓨즈 반사는 표면이 거친, 빛이 모든 방향으로 반사된다.
스펙큘러 반사는 한 방향으로, 표면은 매끄러움
카메라의 따라서 반사가 달라짐

정점의 조명 계산식
H벡터는 카메라와 조명 벡터의 덧셈으로 나온 벡터이며, 이 벡터가 같은 정점에 대한 법선벡터와 일치하면 하이라이트가 가장 세고, 각도가 벌어질 수록 하이라이트가 급격히 사라진다.

2번째 H = Normal((0,0,1) + ... 의 경우 카메라의 위치가 안들어있기 때문에 아무 상관없이 하이라이트 일정

정점의 법선벡터 변환하기

변환행렬으로 역행렬의 전치행렬을 써야 하는 이유?
-법선벡터를 해당 면에 맞게 새우는 과정에서 월드변환행렬의 역행렬의 전치행렬이 필요
-스케일링 변환이 있었다 하더라도 똑바로 세워줌

법선벡터를 변환하려 하면 월드변환행렬의 역행렬의 전치행렬
이 변환행렬의 스케일링 변환행렬의 크기 변환의 양이 똑같으면 단위벡터로만 만들어서 사용되도 됨
이 월드변환행렬이 스케일량이 축마다 다르면 월드변환 행렬의 역행렬의 전치행렬으로 트랜스폼 해야함

가급적 월드변환행렬에는 스케일링에 없도록 해야한다. 성능상 문제 때문

조명을 위한 구조체

LIGHTTYPE 3개 존재 ( 점조명(백열전구, 모든방향 )
(스팟라잇(콘의형태 한쪽 방향)
(LITE-DIRECTION) 멀리서 일찍성 방향

점 조명
AttemFactor(Laf)함수는 파란색 함수 
모든 방향, 감쇠가 적용되는 빛, 빛이 유효한 거리, 위치가 의미있는 조명
감소함수에 대해서 만들 수 있다. 앰비니언트,디퓨즈,스페큘러 값 멀어질수록 줄어든다.

스팟조명
점조명과 달리 빛의 방향도 중요
감쇠 != m_fFalloff(가운데 빛과, 주변 빛의 차이)
점과 광원 사이의 거리 공식은 점조명과 동일
폴업 최대 빛의 세기 0
계산시간 오래걸림

방향성 조명
위치와 거리가 중요하지 않다. 빛이 너무 강하고 멀어서
빛이 강하고 멀기 때문에 평행 광선이라고 한다. 그리고 감쇠가 없는 빛이다.
방향만 가지고 있는 광선이다.
계산이 가장 빠름

재질
주변조명(앰비언트조명) : 빨강
디퓨즈반사 때문에 왼쪽부터 녹,빨,청 
붉은 공 흰색 스페큘럼반사 Why? 점점 어두워짐
bUt, 정육면체 두 면이 비슷한 반사이기 때문에 스페큘럼반사 ㄴㄴ
m_fSpecularPower == 0이면 디퓨즈반사 일어남 매끄럽지 못함??

조명 시스템
같은 조명은 배치처리하는 게 좋음

재질의 정보
-반사의 성질
-텍스처라는 이미지(물체의 표면이 어떤 이미지로 텍스처가 입혀있나)
-Shader
일반적으로 재질에 따라 배치처리

앰비언트의 경우 감쇠를 적용할지 안할지는
*=fAttenFactor있는것 안하면 업슨것이다

법선벡터 노멀라이즈를 PS에서 한 이유?